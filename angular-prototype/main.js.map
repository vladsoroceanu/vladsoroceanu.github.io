{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/actions/form/form.actions.ts","webpack:///./src/app/actions/image/image.actions.ts","webpack:///./src/app/actions/index.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/collection-image/collection-image.component.html","webpack:///./src/app/components/collection-image/collection-image.component.scss","webpack:///./src/app/components/collection-image/collection-image.component.ts","webpack:///./src/app/components/collection/collection.component.html","webpack:///./src/app/components/collection/collection.component.scss","webpack:///./src/app/components/collection/collection.component.ts","webpack:///./src/app/components/my-form/my-form.component.html","webpack:///./src/app/components/my-form/my-form.component.scss","webpack:///./src/app/components/my-form/my-form.component.ts","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.scss","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/effects/load-form.ts","webpack:///./src/app/effects/load-images.ts","webpack:///./src/app/reducers/form/load-form.ts","webpack:///./src/app/reducers/image/add-images.ts","webpack:///./src/app/reducers/image/load-images.ts","webpack:///./src/app/reducers/index.ts","webpack:///./src/app/routes.module.ts","webpack:///./src/app/services/form/form.service.ts","webpack:///./src/app/services/image-items/image-items.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Action } from '@ngrx/store';\n\nexport const FORM_GET = '[Form] Get';\nexport const FORM_LOADED = '[Form] Loaded';\n\nexport class FormGetAction implements Action {\n  readonly type = FORM_GET;\n}\n\nexport class FormLoadedAction implements Action {\n    readonly type = FORM_LOADED;\n    constructor(public payload: any) {}\n}","import { Action } from '@ngrx/store';\n\nexport const IMAGES_LOADED = '[Images] Loaded';\nexport const IMAGES_LOADED_UPDATE = '[Images] Loaded Update';\nexport const IMAGES_GET = '[Images] Get';\nexport const IMAGES_ADD = '[Images] Add';\n\nexport class ImagesLoadedAction implements Action {\n    readonly type = IMAGES_LOADED;\n    constructor(public payload: Array<any>) {}\n}\n\nexport class ImagesLoadedUpdateAction implements Action {\n    readonly type = IMAGES_LOADED_UPDATE;\n    constructor(public payload: Array<any>) {}\n}\n\nexport class ImagesGetAction implements Action {\n    readonly type = IMAGES_GET;\n    constructor(public payload?:any) {}\n}\n\nexport class ImagesAddAction implements Action {\n    readonly type = IMAGES_ADD;\n    constructor(public payload: Array<any>) {}\n}","export { FORM_GET } from './form/form.actions';\nexport { FORM_LOADED } from './form/form.actions';\nexport { FormGetAction } from './form/form.actions';\nexport { FormLoadedAction } from './form/form.actions';\n\nexport { IMAGES_LOADED } from './image/image.actions';\nexport { IMAGES_LOADED_UPDATE } from './image/image.actions';\nexport { IMAGES_GET } from './image/image.actions';\nexport { IMAGES_ADD } from './image/image.actions';\nexport { ImagesLoadedAction } from './image/image.actions';\nexport { ImagesLoadedUpdateAction } from './image/image.actions';\nexport { ImagesGetAction } from './image/image.actions';\nexport { ImagesAddAction } from './image/image.actions';","module.exports = \"<navbar></navbar>\\n<router-outlet></router-outlet>\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { DragulaModule } from 'ng2-dragula';\nimport { MatFormFieldModule, MatCheckboxModule, MatInputModule, MatSelectModule, MatButtonModule, MatSidenavModule, MatIconModule } from '@angular/material';\n\nimport { AppRoutes } from './routes.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { MyFormComponent } from './components/my-form/my-form.component';\nimport { CollectionComponent } from './components/collection/collection.component';\nimport { ImageItemsService } from './services/image-items/image-items.service';\n\nimport { reducers } from './reducers';\nimport { LoadImagesEffect } from './effects/load-images';\nimport { FormService } from './services/form/form.service';\nimport { LoadFormEffect } from './effects/load-form';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CollectionImageComponent } from './components/collection-image/collection-image.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    MyFormComponent,\n    CollectionComponent,\n    CollectionImageComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n\n    MatInputModule, \n    MatButtonModule,\n    MatSelectModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    DragulaModule,\n\n    StoreModule.forRoot(reducers),\n    EffectsModule.forRoot([LoadImagesEffect, LoadFormEffect]),\n    RouterModule.forRoot(\n      AppRoutes,\n      { enableTracing: false } // <-- debugging purposes only\n    )\n  ],\n  providers: [\n    ImageItemsService,\n    FormService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"container\\\" (click)=\\\"onClick($event)\\\" [@imageState]=\\\"loaded\\\">\\n    <img src=\\\"{{src}}\\\" (load)=\\\"onLoad()\\\">\\n    <i class=\\\"material-icons plus\\\" [attr.selected]=\\\"selected\\\">add_box</i>\\n</div>\"","module.exports = \".plus {\\n  position: absolute;\\n  left: 10px;\\n  color: white;\\n  padding: 5px 0 0 5px;\\n  text-shadow: 1px 1px 2px black, 0 0 1em #666, 0 0 0.2em #666; }\\n  .plus[selected=\\\"true\\\"] {\\n    color: #ff4081; }\\n\"","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\n\n@Component({\n  selector: 'collection-image',\n  templateUrl: './collection-image.component.html',\n  styleUrls: ['./collection-image.component.scss'],\n  animations: [\n    trigger('imageState', [\n      state('false', style({\n        opacity: 0\n      })),\n      state('true', style({\n        opacity: 1\n      })),\n      transition('false => true', animate('350ms ease-in')),\n      transition('true => false', animate('350ms ease-out'))\n    ])\n  ]\n})\nexport class CollectionImageComponent {\n  @Input() public src: string;\n  @Input() public selected: boolean = false;\n  @Output() public onSelect:EventEmitter<boolean> = new EventEmitter<boolean>();\n  public loaded: boolean = false;\n\n  public onLoad() {\n    this.loaded = true;\n  }\n\n  onClick(event) {\n    this.selected = !this.selected;\n    this.onSelect.emit(this.selected);\n  }\n}\n","module.exports = \"<div class=\\\"column\\\">\\n  <div class=\\\"folder-header\\\">\\n    <span>Available Movies</span>\\n    <button mat-icon-button color=\\\"accent\\\" (click)=\\\"selectAll()\\\"><mat-icon>add</mat-icon></button>\\n  </div>\\n  <ul class=\\\"container available\\\" [dragula]=\\\"dragulaBagName\\\" [dragulaModel]='itemList'>\\n    <li class=\\\"image-container\\\" *ngFor=\\\"let item of itemList; let i = index\\\" [attr.selected]=\\\"item.selected\\\">\\n      <collection-image class=\\\"image\\\" [src]=\\\"item.src\\\" [selected]=\\\"item.selected\\\" (onSelect)=\\\"selectItem(i)\\\"></collection-image>\\n    </li>\\n  </ul>\\n</div>\\n\\n<div class=\\\"column\\\">\\n  <div class=\\\"folder-header\\\"><span>Add to Collection</span></div>\\n  <ul class=\\\"container added\\\" [dragula]=\\\"dragulaBagName\\\" [dragulaModel]='addedList'>\\n    <li class=\\\"image-container\\\" *ngFor=\\\"let item of addedList\\\">\\n        <collection-image class=\\\"image\\\" [src]=\\\"item.src\\\"></collection-image>\\n    </li>\\n  </ul>\\n</div>\"","module.exports = \":host {\\n  position: absolute;\\n  display: flex;\\n  top: 0;\\n  left: 240px;\\n  width: calc(100% - 290px);\\n  padding: 20px 20px 20px 30px; }\\n\\n.column {\\n  width: 50%;\\n  margin: 10px; }\\n\\n.column .folder-header {\\n    height: 2rem; }\\n\\n.column .folder-header span {\\n      font-size: 1.5rem; }\\n\\n.container {\\n  display: flex;\\n  flex-wrap: wrap;\\n  padding: 0;\\n  list-style-type: none;\\n  border-top: 1px solid #666; }\\n\\n.container.added {\\n    min-height: 180px; }\\n\\n.image-container {\\n  position: relative;\\n  width: 120px;\\n  height: 160px;\\n  padding: 10px;\\n  cursor: pointer;\\n  transition: all .25s ease; }\\n\\n.image-container:hover {\\n    -webkit-filter: brightness(1.25);\\n            filter: brightness(1.25); }\\n\\n.image-container .image-label {\\n    display: none; }\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { DragulaService } from 'ng2-dragula';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { State, getLoadedImages, getAddedImages } from '../../reducers';\nimport { ImagesGetAction, ImagesAddAction, ImagesLoadedAction } from '../../actions';\n\nexport interface ImageItems {\n  src: string;\n  label: string;\n  selected?: boolean;\n}\n\n@Component({\n  selector: 'collection',\n  templateUrl: './collection.component.html',\n  styleUrls: ['./collection.component.scss']\n})\nexport class CollectionComponent implements OnInit, OnDestroy {\n  private itemListIdentifier: string = 'available';\n  private addedListIdentifier: string = 'added';\n  private subscription: any;\n  public dragulaBagName: string = 'bag-items';\n  public itemList: Array<ImageItems> = [];\n  public addedList: Array<ImageItems> = [];\n  \n  constructor(\n    private dragulaService: DragulaService,\n    private store: Store<State>\n  ) {\n    // subscribe to the loaded images\n    this.subscription = store.select(getLoadedImages).subscribe(items => {\n      this.itemList = items;\n    });\n\n    // subscribe to the added images\n    const addedSubscription = store.select(getAddedImages).subscribe(items => {\n      this.addedList = items;\n    });\n    this.subscription.add(addedSubscription);\n\n    // add dragged images to the addedList\n    const dropSubscription = this.dragulaService.dropModel.subscribe(drop => this.onDrop(drop));\n    this.subscription.add(dropSubscription);\n  }\n\n  ngOnInit() {\n    this.store.dispatch(new ImagesGetAction());\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n    this.dragulaService.destroy(this.dragulaBagName);\n  }\n\n  public selectItem(index) {\n    let item = this.itemList[index];\n    item.selected = !item.selected;\n  }\n\n  public selectAll() {\n    this.itemList = this.itemList.map(item => {\n      item.selected = !item.selected;\n      return item;\n    });\n  }\n\n  private onDrop(drop) {\n    let source = drop[3].className;\n    let destination = drop[2].className;\n      if (source === drop) {\n        return;\n        \n      } else if (destination.indexOf(this.itemListIdentifier) > 0) {\n        this.addedList = this.addedList.filter(item => {\n          if (item.selected) {\n            item.selected = false;\n            this.itemList.push(item);\n            return false;\n          } else {\n            return true;\n          }\n        });\n      } else if (destination.indexOf(this.addedListIdentifier) > 0) {\n        this.itemList = this.itemList.filter(item => {\n          if (item.selected) {\n            item.selected = false;\n            this.addedList.push(item);\n            return false;\n          } else {\n            return true;\n          }\n        });\n      }\n\n      // push the arrays to the state\n      this.store.dispatch(new ImagesLoadedAction(this.itemList));\n      this.store.dispatch(new ImagesAddAction(this.addedList));\n  }\n}","module.exports = \"<form class=\\\"form-container\\\" [formGroup]=\\\"options\\\">\\n  <div class=\\\"field-container\\\" *ngFor=\\\"let field of form$ | async\\\">\\n      <div *ngIf=\\\"field.datagramValueType === 'STRING'\\\">\\n          <mat-form-field [floatLabel]=\\\"options.value.floatLabel\\\">\\n              <input matInput required placeholder=\\\"{{field.name}}\\\">\\n          </mat-form-field>\\n      </div>\\n      <div *ngIf=\\\"field.datagramValueType === 'BOOLEAN'\\\">\\n        <mat-checkbox>{{field.name}}</mat-checkbox>\\n      </div>\\n      <div *ngIf=\\\"field.datagramValueType === 'REF_CODE'\\\">\\n          <mat-form-field [floatLabel]=\\\"options.value.floatLabel\\\">\\n          <mat-select required>\\n            <mat-option value=\\\"None\\\">None</mat-option>\\n            <mat-option *ngFor=\\\"let opt of field.options\\\" value=\\\"{{opt}}\\\">{{opt}}</mat-option>\\n          </mat-select>\\n          <mat-label>{{field.name}}</mat-label>\\n        </mat-form-field>\\n      </div>\\n  </div>\\n  <div class=\\\"button-container\\\">\\n      <button mat-raised-button color=\\\"primary\\\">Save</button>\\n  </div>\\n</form>\"","module.exports = \":host {\\n  position: absolute;\\n  display: block;\\n  top: 0;\\n  left: 240px;\\n  width: calc(100% - 290px);\\n  padding: 20px 20px 20px 30px; }\\n\\n.form-container {\\n  display: flex;\\n  flex-wrap: wrap; }\\n\\n.form-container .field-container {\\n    flex-basis: 50%; }\\n\\n.form-container .field-container .mat-form-field {\\n      width: calc(100% - 40px); }\\n\\n.form-container .button-container {\\n    display: flex;\\n    width: calc(100% - 40px);\\n    justify-content: flex-end; }\\n\\n.form-container .button-container > button {\\n      width: 150px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, FormControl} from '@angular/forms';\nimport { FormGetAction } from '../../actions';\nimport { Store } from '@ngrx/store';\nimport { State, getGroupForm } from '../../reducers';\n\nimport 'rxjs/add/operator/take';\n\n@Component({\n  selector: 'my-form',\n  templateUrl: './my-form.component.html',\n  styleUrls: ['./my-form.component.scss']\n})\nexport class MyFormComponent implements OnInit {\n  options: FormGroup;\n  private username: any;\n  private password: any;\n  public form$: any;\n\n\n  constructor(\n    private store: Store<State>,\n    fb: FormBuilder\n  ) {\n    this.options = fb.group({ floatLabel: 'auto' });\n    console.log(this.store.select(getGroupForm).subscribe(form => console.log(form)));\n    this.form$ = this.store.select(getGroupForm);\n  }\n\n  ngOnInit() {\n    this.store.dispatch(new FormGetAction());\n  }\n}","module.exports = \"<nav class=\\\"shrine-drawer mdc-drawer mdc-drawer--permanent\\\">\\n  <img class=\\\"atom-logo\\\" src=\\\"assets/atom-logo.png\\\" />\\n  <div class=\\\"mdc-drawer__content\\\">\\n    <nav class=\\\"mdc-list\\\">\\n      <a class=\\\"mdc-list-item\\\" routerLink=\\\"form\\\">\\n        Form\\n      </a>\\n      <a class=\\\"mdc-list-item\\\" routerLink=\\\"collection\\\">\\n        Collection\\n      </a>\\n    </nav>\\n  </div>\\n</nav>\"","module.exports = \":host {\\n  height: 100%;\\n  position: absolute; }\\n\\nnav {\\n  height: inherit; }\\n\\n.shrine-logo-drawer {\\n  width: 48px;\\n  padding: 40px 0 0;\\n  margin: 0 auto;\\n  fill: currentColor; }\\n\\n.shrine-title {\\n  -ms-grid-row-align: center;\\n      align-self: center;\\n  margin: 5px auto; }\\n\\n.atom-logo {\\n  width: 75px;\\n  margin: 0 auto;\\n  padding: 10px;\\n  height: auto; }\\n\"","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { NavigationEnd, ActivatedRoute, RouterState, Router } from '@angular/router';\n\n@Component({\n  selector: 'navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent {\n  public isHandset: Observable<BreakpointState> = this.breakpointObserver.observe(Breakpoints.Handset);\n  public routeTitle: string = '';\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        this.routeTitle = `${event.url.substr(1, 1).toUpperCase()}${event.url.substring(2)}`;\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormService } from '../services/form/form.service';\nimport { FormGetAction, FormLoadedAction, FORM_GET } from '../actions';\nimport { Action, Store } from '@ngrx/store';\nimport { Actions, Effect } from '@ngrx/effects';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/switchMap';\n\n@Injectable()\nexport class LoadFormEffect {\n    @Effect()\n    loadForm$: Observable<Action> = this.actions$\n        .ofType(FORM_GET)\n            .switchMap(() => {\n                return this.formService.getForm().map(data => {\n                    return new FormLoadedAction(data);\n                });\n        });\n    \n    constructor(\n        private formService: FormService,\n        private actions$: Actions\n    ) {}\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ImageItemsService } from '../services/image-items/image-items.service';\nimport { ImagesGetAction, ImagesLoadedAction, IMAGES_GET } from '../actions';\nimport { State, getLoadedImages } from '../reducers';\nimport { Action, Store } from '@ngrx/store';\nimport { Actions, Effect } from '@ngrx/effects';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/switchMap';\nimport 'rxjs/add/operator/withLatestFrom';\nimport 'rxjs/add/operator/filter';\n\n@Injectable()\nexport class LoadImagesEffect {\n    @Effect()\n    loadImages$: Observable<Action> = this.actions$\n        .ofType(IMAGES_GET)\n        .withLatestFrom(this.store)\n        .filter(((value: [Action, State], index: number) => { return value[1].loadedImages.length === 0 }))\n        .switchMap(() => {\n            return this.imageItemsService.getImageList(150)\n                .map(data => {\n                    return new ImagesLoadedAction(data);\n                });\n        });\n    \n    constructor(\n        private imageItemsService: ImageItemsService,\n        private actions$: Actions,\n        private store: Store<State>\n    ) {}\n}","import { Action } from '@ngrx/store';\nimport { FORM_LOADED, FormLoadedAction } from '../../actions';\n\nexport function reducer(state = [], action: FormLoadedAction) {\n    switch (action.type) {\n        case FORM_LOADED:\n            return [\n                { ...action.payload.ACCESS_CHANNEL },\n                { ...action.payload.SECTION_NAVIGATION },\n                { ...action.payload.HEROBANNER },\n                { ...action.payload.ALIAS },\n                { ...action.payload.VIEW_ALL },\n                { ...action.payload.COLOR },\n                { ...action.payload.ORIENTATION },\n                { ...action.payload.INTERACTION }\n            ];\n        default:\n            return state;\n    }\n}","import { Action } from '@ngrx/store';\nimport { IMAGES_ADD, ImagesAddAction } from '../../actions';\n\nexport function reducer(state: Array<any> = [], action: ImagesAddAction) {\n    switch (action.type) {\n        case IMAGES_ADD:\n            return action.payload.slice();\n        default:\n            return state;\n    }\n}","import { Action } from '@ngrx/store';\nimport { IMAGES_LOADED, ImagesLoadedAction } from '../../actions';\n\nexport function reducer(state = [], action: ImagesLoadedAction) {\n    switch (action.type) {\n        case IMAGES_LOADED:\n            return action.payload.slice();\n        default:\n            return state;\n    }\n}","import * as loadImages from './image/load-images';\nimport * as addImages from './image/add-images';\nimport * as loadForm from './form/load-form';\n\n// define main state\nexport interface State {\n    loadedImages: Array<any>;\n    addedImages: Array<any>;\n    loadedForm: any;\n}\n\n// expose reducers\nexport const reducers = {\n    loadedImages: loadImages.reducer,\n    addedImages: addImages.reducer,\n    loadedForm: loadForm.reducer\n\n    \n};\n\n// declare selectors\nexport const getLoadedImages = (state: State) => state.loadedImages;\nexport const getAddedImages = (state: State) => state.addedImages;\nexport const getGroupForm = (state: State) => state.loadedForm;","import { NgModule } from '@angular/core';\nimport { Routes } from '@angular/router';\nimport { MyFormComponent } from './components/my-form/my-form.component';\nimport { AppComponent } from './app.component';\nimport { CollectionComponent } from './components/collection/collection.component';\n\nexport const AppRoutes: Routes = [\n    {\n      path: 'form',\n      component: MyFormComponent,\n      data: {title: 'Form'}\n      \n    },\n    {\n      path: 'collection',\n      component: CollectionComponent,\n      data: {title: 'Collection'}\n    },\n    { path: '',\n      redirectTo: 'form',\n      pathMatch: 'full'\n    },\n    { path: '**', component: MyFormComponent }\n];","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/operator/switchMap'\n\nconst formUrl: string = 'assets/mock-data.json';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormService {\n  constructor( private http:HttpClient ) { }\n\n  public getForm(): Observable<any> {\n    return this.http.get(formUrl).map((data: any) => {\n      let groupForm = data.payload.nodeTypes.CATALOGUE.subTypes.GROUP.attributes;\n      groupForm.ACCESS_CHANNEL.options = ['Sky Atlantic', 'Sky Cinema'];\n      groupForm.SECTION_NAVIGATION.options = ['Default', 'Documentaries', 'Entertainment', 'Home'];\n      groupForm.VIEW_ALL.options = ['False', 'True'];\n      groupForm.ORIENTATION.options = ['Landscape', 'Portrait'];\n      groupForm.INTERACTION.options = ['Background', 'Expand'];\n      return groupForm;\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { of } from 'rxjs/observable/of';\n\nimport { ImageItems } from '../../components/collection/collection.component';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageItemsService {\n  public getImageList(limit: number = 10): Observable<Array<ImageItems>> {\n    let itemList: Array<ImageItems> = [];\n\n    for (let i = 0; i < limit; i++) {\n      itemList.push(\n        {\n          src: `http://placeimg.com/120/160/any?${Math.round(Math.random() * 100000)}`,\n          label: 'Label'\n        }\n      )\n    }\n\n    return of(itemList);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}